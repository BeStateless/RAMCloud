# This was taken directly from the official Dockerfile from debian:
#   https://github.com/31z4/zookeeper-docker/blob/master/3.5.5/Dockerfile
#
# The following changes were made:
#   * Change FROM from "openjdk:8-jre-slim" to "debian:buster"
#   * Install openjdk-11-jre-headless
#   * Change local location of docker-entrypoint.sh from 'docker-entrypoint.sh' to 'config/docker-entrypoint.sh'
FROM debian:buster as zookeeper

ENV ZOO_CONF_DIR=/conf \
    ZOO_DATA_DIR=/data \
    ZOO_DATA_LOG_DIR=/datalog \
    ZOO_LOG_DIR=/logs \
    ZOO_TICK_TIME=2000 \
    ZOO_INIT_LIMIT=5 \
    ZOO_SYNC_LIMIT=2 \
    ZOO_AUTOPURGE_PURGEINTERVAL=0 \
    ZOO_AUTOPURGE_SNAPRETAINCOUNT=3 \
    ZOO_MAX_CLIENT_CNXNS=60 \
    ZOO_STANDALONE_ENABLED=true \
    ZOO_ADMINSERVER_ENABLED=true

# Add a user with an explicit UID/GID and create necessary directories
RUN set -eux; \
    groupadd -r zookeeper --gid=1000; \
    useradd -r -g zookeeper --uid=1000 zookeeper; \
    mkdir -p "$ZOO_DATA_LOG_DIR" "$ZOO_DATA_DIR" "$ZOO_CONF_DIR" "$ZOO_LOG_DIR"; \
    chown zookeeper:zookeeper "$ZOO_DATA_LOG_DIR" "$ZOO_DATA_DIR" "$ZOO_CONF_DIR" "$ZOO_LOG_DIR"

# Install required packges
RUN set -eux; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        dirmngr \
        gosu \
        gnupg \
        netcat \
        openjdk-11-jre-headless \
        wget; \
    rm -rf /var/lib/apt/lists/*; \
# Verify that gosu binary works
    gosu nobody true

ARG GPG_KEY=3F7A1D16FA4217B1DC75E1C9FFE35B7F15DFA1BA
ARG SHORT_DISTRO_NAME=zookeeper-3.5.8
ARG DISTRO_NAME=apache-zookeeper-3.5.8-bin

# Download Apache Zookeeper, verify its PGP signature, untar and clean up
RUN set -eux; \
    wget -q "http://archive.apache.org/dist/zookeeper/$SHORT_DISTRO_NAME/$DISTRO_NAME.tar.gz"; \
    wget -q "http://archive.apache.org/dist/zookeeper/$SHORT_DISTRO_NAME/$DISTRO_NAME.tar.gz.asc"; \
    export GNUPGHOME="$(mktemp -d)"; \
# Removing these checks because the GPG_KEY value above is no longer correct for the 3.5.7 ZK package
#    gpg --keyserver ha.pool.sks-keyservers.net --recv-key "$GPG_KEY" || \
#    gpg --keyserver pgp.mit.edu --recv-keys "$GPG_KEY" || \
#    gpg --keyserver keyserver.pgp.com --recv-keys "$GPG_KEY"; \
#    gpg --batch --verify "$DISTRO_NAME.tar.gz.asc" "$DISTRO_NAME.tar.gz"; \
    tar -zxf "$DISTRO_NAME.tar.gz"; \
    mv "$DISTRO_NAME/conf/"* "$ZOO_CONF_DIR"; \
    rm -rf "$GNUPGHOME" "$DISTRO_NAME.tar.gz" "$DISTRO_NAME.tar.gz.asc"; \
    chown -R zookeeper:zookeeper "/$DISTRO_NAME"

WORKDIR $DISTRO_NAME
VOLUME ["$ZOO_DATA_DIR", "$ZOO_DATA_LOG_DIR", "$ZOO_LOG_DIR"]

EXPOSE 2181 2888 3888 8080

ENV PATH=$PATH:/$DISTRO_NAME/bin \
    ZOOCFGDIR=$ZOO_CONF_DIR

COPY ./config/docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["zkServer.sh", "start-foreground"]

# Make a container capable of running RAMCloud using the locally built RAMCloud binaries and libraries.
FROM zookeeper
RUN apt-get update \
 && apt-get install --yes \
      libboost-filesystem1.67.0 \
      libboost-program-options1.67 \
      libboost-system1.67.0 \
      libibverbs1 \
      libpcrecpp0v5 \
      libprotobuf17 \
      libssl1.1 \
      libzookeeper-mt2 \
      procps \
      supervisor \
 && rm -rf /var/lib/apt/lists/*
COPY ./RAMCloud/install /usr/local
COPY ./config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
ENTRYPOINT ["/usr/bin/supervisord"]
